# pylint: skip-file

"""changed table schema according to Prepexity review

Revision ID: 3e3522f2825b
Revises: e2379553e5a7
Create Date: 2024-05-01 15:50:40.074346

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "3e3522f2825b"
down_revision = "e2379553e5a7"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("notice", schema=None) as batch_op:
        batch_op.alter_column(
            "module",
            existing_type=sa.VARCHAR(length=50),
            type_=sa.Enum(
                "SYSTEM",
                "USER",
                "POST",
                "COMMENT",
                "REPLY",
                "LIKE",
                "FOLLOW",
                "SAVE",
                "COMMUNITY",
                name="noticemoduleenum",
            ),
            existing_nullable=True,
        )

    with op.batch_alter_table("reply", schema=None) as batch_op:
        batch_op.alter_column(
            "source",
            existing_type=sa.VARCHAR(length=50),
            type_=sa.Enum("HUMAN", "AI", name="replysourceenum"),
            existing_nullable=True,
        )

    with op.batch_alter_table("trending", schema=None) as batch_op:
        batch_op.drop_constraint(
            "fk_trending_request_title_request", type_="foreignkey"
        )
        batch_op.drop_column("request_title")

    with op.batch_alter_table("user_record", schema=None) as batch_op:
        batch_op.alter_column(
            "record_type",
            existing_type=sa.VARCHAR(length=80),
            type_=sa.Enum(
                "REQUEST", "REPLY", "VIEW", "LIKE", "SAVE", name="userrecordtypeenum"
            ),
            existing_nullable=True,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_record", schema=None) as batch_op:
        batch_op.alter_column(
            "record_type",
            existing_type=sa.Enum(
                "REQUEST", "REPLY", "VIEW", "LIKE", "SAVE", name="userrecordtypeenum"
            ),
            type_=sa.VARCHAR(length=80),
            existing_nullable=True,
        )

    with op.batch_alter_table("trending", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("request_title", sa.VARCHAR(length=40), nullable=True)
        )
        batch_op.create_foreign_key(
            "fk_trending_request_title_request", "request", ["request_title"], ["title"]
        )

    with op.batch_alter_table("reply", schema=None) as batch_op:
        batch_op.alter_column(
            "source",
            existing_type=sa.Enum("HUMAN", "AI", name="replysourceenum"),
            type_=sa.VARCHAR(length=50),
            existing_nullable=True,
        )

    with op.batch_alter_table("notice", schema=None) as batch_op:
        batch_op.alter_column(
            "module",
            existing_type=sa.Enum(
                "SYSTEM",
                "USER",
                "POST",
                "COMMENT",
                "REPLY",
                "LIKE",
                "FOLLOW",
                "SAVE",
                "COMMUNITY",
                name="noticemoduleenum",
            ),
            type_=sa.VARCHAR(length=50),
            existing_nullable=True,
        )

    # ### end Alembic commands ###
