# This workflow will install Python dependencies, lint and check for syntax errors run with a single version of Python
# After build the workflow will run all unit tests with pytest using a test matrix
# On successful build and test it will create a docker image for productive environment and push it to a container repository

name: PROD - CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint isort
          pip install -r requirements.txt

      - name: Install project
        run: |
          pip install -e .

      - name: Run Pylint
        run: |
          pylint project

      - name: Run isort
        run: |
          isort project

      - name: Install Prettier
        run: npm install --global prettier

      - name: Run Prettier
        run: |
          prettier --write .

  test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.11]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint isort
          pip install -r requirements.txt

      - name: Install project
        run: |
          pip install -e .

      - name: Test with Flask-Unittest
        run: |
          cd $GITHUB_WORKSPACE 
          python test.py

  # deploy:
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build Docker image
  #       run: docker build . -t mgrum/flask-example-cicd:latest
  #     - name: Push Docker image
  #       run: docker push mgrum/flask-example-cicd:latest
